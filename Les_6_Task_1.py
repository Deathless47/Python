'''
Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков.
Проанализировать результат и определить программы с наиболее эффективным использованием памяти.

Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько вариантов кода для одной и той же задачи.
Результаты анализа вставьте в виде комментариев к коду.
Также укажите в комментариях версию Python и разрядность вашей ОС.
'''
import sys
import random

# ОС Windows 11 Pro (версия 21H2), х64
# Python 3.9 (64-бит)

'''
Задача: В массиве случайных целых чисел поменять местами минимальный и максимальный элементы (Урок 3 задача 3).
'''


# вариант 1 решения задачи.
print("*" * 75)


array = [random.randint(1, 1_000) for _ in range(10)]
max_ = array[0]
min_ = array[0]
for i in array:
    if i > max_:
        max_ = i
    elif i < max_ and i < min_:
        min_ = i
res_max_ = array.index(max_)
res_min_ = array.index(min_)
array[res_max_], array[res_min_] = array[res_min_], array[res_max_]

print(f' В варианте 1 задействовано: {sys.getsizeof(array) + sys.getsizeof(max_) + sys.getsizeof(min_) + sys.getsizeof (i)} байт')


# вариант 2 решения задачи.
print("*" * 75)

array_2 = [random.randint(1, 1_000) for _ in range(10)]
max_2_ = max(array_2)
min_2_ = min(array_2)
max_2_, min_2_ = min_2_, max_2_

print(f' В варианте 2 задействовано: {sys.getsizeof(array_2) + sys.getsizeof(max_2_) + sys.getsizeof(min_2_)} байт')


# вариант 3 решения задачи.
print("*" * 75)


array_3 = [random.randint(1, 1_000) for _ in range(10)]
arr = sorted(array_3)
max_3_ = arr[-1]
min_3_ = arr[0]
max_3_, min_3_ = min_3_, max_3_

print(f' В варианте 3 задействовано: {sys.getsizeof(array_3) + sys.getsizeof(max_3_) + sys.getsizeof(min_3_) + (sys.getsizeof(arr))} байт')

'''
***************************************************************************
 В варианте 1 задействовано: 268 байт
***************************************************************************
 В варианте 2 задействовано: 240 байт
***************************************************************************
 В варианте 3 задействовано: 392 байт
'''

'''
Вывод: оптимальным решением по затрате памяти будет являться 2 вариант, так как задействовано меньше переменныхю
в 1 варианте дополнительно есть переменная i, в 3 варианте мы сортируем список, вводится переменная arr. 
3 вариант самый затратный.
'''